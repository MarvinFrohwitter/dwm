!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/marvin/.Programme/dwm/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/p5.9.20220828.0/
FORCE_VSPLIT	config.def.h	/^#define FORCE_VSPLIT /;"	d
MODKEY	config.def.h	/^#define MODKEY /;"	d
SHCMD	config.def.h	/^#define SHCMD(/;"	d
STATUSBAR	config.def.h	/^#define STATUSBAR /;"	d
TAGKEYS	config.def.h	/^#define TAGKEYS(/;"	d
activeopacity	config.def.h	/^static const double activeopacity   = 1.0f;     \/* Window opacity when it's focused (0 <= opaci/;"	v	typeref:typename:const double
alacritty	config.def.h	/^static const char *alacritty[]  = { "alacritty", NULL };$/;"	v	typeref:typename:const char * []
alphas	config.def.h	/^static const unsigned int alphas[][3]      = {$/;"	v	typeref:typename:const unsigned int[][3]
bUseOpacity	config.def.h	/^static       Bool bUseOpacity       = True;     \/* Starts with opacity on any unfocused windows/;"	v	typeref:typename:Bool
baralpha	config.def.h	/^static const unsigned int baralpha = 0xdd;$/;"	v	typeref:typename:const unsigned int
borderalpha	config.def.h	/^static const unsigned int borderalpha = OPAQUE;$/;"	v	typeref:typename:const unsigned int
borderpx	config.def.h	/^static const unsigned int borderpx  = 1;        \/* border pixel of windows *\/$/;"	v	typeref:typename:const unsigned int
brave	config.def.h	/^static const char *brave[]  = { "brave", NULL };$/;"	v	typeref:typename:const char * []
brightnessdown	config.def.h	/^static const char *brightnessdown[] = { "light", "-U", "10", NULL };$/;"	v	typeref:typename:const char * []
brightnessup	config.def.h	/^static const char *brightnessup[] = { "light", "-A", "10", NULL };$/;"	v	typeref:typename:const char * []
buttons	config.def.h	/^static const Button buttons[] = {$/;"	v	typeref:typename:const Button[]
clementine	config.def.h	/^static const char *clementine[]  = { "clementine", NULL };$/;"	v	typeref:typename:const char * []
clementinedown	config.def.h	/^static const char *clementinedown[]  = { "clementine", "--volume-down", NULL };$/;"	v	typeref:typename:const char * []
clementinemute	config.def.h	/^static const char *clementinemute[]  = { "clementine", "-t", NULL };$/;"	v	typeref:typename:const char * []
clementinenexttrack	config.def.h	/^static const char *clementinenexttrack[]  = { "clementine", "-f", NULL };$/;"	v	typeref:typename:const char * []
clementineprevioustrack	config.def.h	/^static const char *clementineprevioustrack[]  = { "clementine", "-r", NULL };$/;"	v	typeref:typename:const char * []
clementineup	config.def.h	/^static const char *clementineup[]  = { "clementine", "--volume-up", NULL };$/;"	v	typeref:typename:const char * []
colors	config.def.h	/^static char *colors[][3] = {$/;"	v	typeref:typename:char * [][3]
discord	config.def.h	/^static const char *discord[]  = { "discord", NULL };$/;"	v	typeref:typename:const char * []
dmenucmd	config.def.h	/^static const char *dmenucmd[] = { "dmenu_run", "-F", "-c", "-fn", dmenufont, "-nb", normbgcolor,/;"	v	typeref:typename:const char * []
dmenufont	config.def.h	/^static const char dmenufont[]       = "JetBrainsMono Nerd Font:pixelsize=12:antialias=true:autoh/;"	v	typeref:typename:const char[]
fonts	config.def.h	/^static const char *fonts[]          = { "JetBrainsMono Nerd Font:pixelsize=15:antialias=true:aut/;"	v	typeref:typename:const char * []
gappih	config.def.h	/^static const unsigned int gappih    = 10;       \/* horiz inner gap between windows *\/$/;"	v	typeref:typename:const unsigned int
gappiv	config.def.h	/^static const unsigned int gappiv    = 10;       \/* vert inner gap between windows *\/$/;"	v	typeref:typename:const unsigned int
gappoh	config.def.h	/^static const unsigned int gappoh    = 10;       \/* horiz outer gap between windows and screen e/;"	v	typeref:typename:const unsigned int
gappov	config.def.h	/^static const unsigned int gappov    = 10;       \/* vert outer gap between windows and screen ed/;"	v	typeref:typename:const unsigned int
inactiveopacity	config.def.h	/^static const double inactiveopacity = 1.0f;   \/* Window opacity when it's inactive (0 <= opacit/;"	v	typeref:typename:const double
keys	config.def.h	/^static const Key keys[] = {$/;"	v	typeref:typename:const Key[]
layouts	config.def.h	/^static const Layout layouts[] = {$/;"	v	typeref:typename:const Layout[]
lf	config.def.h	/^static const char *lf[]  = { "alacritty", "-e", "lfueberzug", NULL };$/;"	v	typeref:typename:const char * []
lockfullscreen	config.def.h	/^static const int lockfullscreen = 1; \/* 1 will force focus on the fullscreen window *\/$/;"	v	typeref:typename:const int
mfact	config.def.h	/^static const float mfact     = 0.50; \/* factor of master area size [0.05..0.95] *\/$/;"	v	typeref:typename:const float
monocles	config.def.h	/^static const char *monocles[] = { "[1]", "[2]", "[3]", "[4]", "[5]", "[6]", "[7]", "[8]", "[9]",/;"	v	typeref:typename:const char * []
ncmpcpp	config.def.h	/^static const char *ncmpcpp[]  = { "alacritty","--title=ncmpcpp", "-e", "ncmpcpp", NULL };$/;"	v	typeref:typename:const char * []
nemo	config.def.h	/^static const char *nemo[]  = { "nemo", NULL };$/;"	v	typeref:typename:const char * []
newsboat	config.def.h	/^static const char *newsboat[]  = { "alacritty", "--title=newsboat", "-e","newsboat", NULL };$/;"	v	typeref:typename:const char * []
nmaster	config.def.h	/^static const int nmaster     = 1;    \/* number of clients in master area *\/$/;"	v	typeref:typename:const int
normbgcolor	config.def.h	/^static char normbgcolor[]           = "#11121D";$/;"	v	typeref:typename:char[]
normbordercolor	config.def.h	/^static char normbordercolor[]       = "#444444";$/;"	v	typeref:typename:char[]
normfgcolor	config.def.h	/^static char normfgcolor[]           = "#a9b1d6";$/;"	v	typeref:typename:char[]
notepdf	config.def.h	/^static const char *notepdf[]  = { "notepdf", NULL };$/;"	v	typeref:typename:const char * []
notetaker	config.def.h	/^static const char *notetaker[]  = { "alacritty", "--title=notetaker", "-e", "notetaker", NULL };$/;"	v	typeref:typename:const char * []
ranger	config.def.h	/^static const char *ranger[]  = { "alacritty","-e","ranger", NULL };$/;"	v	typeref:typename:const char * []
resizehints	config.def.h	/^static const int resizehints = 1;    \/* 1 means respect size hints in tiled resizals *\/$/;"	v	typeref:typename:const int
resources	config.def.h	/^ResourcePref resources[] = {$/;"	v	typeref:typename:ResourcePref[]
rofi	config.def.h	/^static const char *rofi[]  = { "rofi", "-show-icons", "-show", "drun", NULL };$/;"	v	typeref:typename:const char * []
rules	config.def.h	/^static const Rule rules[] = {$/;"	v	typeref:typename:const Rule[]
selbgcolor	config.def.h	/^static char selbgcolor[]            = "#005577";$/;"	v	typeref:typename:char[]
selbordercolor	config.def.h	/^static char selbordercolor[]        = "#005577";$/;"	v	typeref:typename:char[]
selfgcolor	config.def.h	/^static char selfgcolor[]            = "#eeeeee";$/;"	v	typeref:typename:char[]
showbar	config.def.h	/^static const int showbar            = 1;        \/* 0 means no bar *\/$/;"	v	typeref:typename:const int
sidepad	config.def.h	/^static const int sidepad            = 10;       \/* horizontal padding of bar *\/$/;"	v	typeref:typename:const int
slock	config.def.h	/^static const char *slock[]  = { "slock", NULL };$/;"	v	typeref:typename:const char * []
smartgaps	config.def.h	/^static       int smartgaps          = 0;        \/* 1 means no outer gap when there is only one /;"	v	typeref:typename:int
snap	config.def.h	/^static const unsigned int snap      = 32;       \/* snap pixel *\/$/;"	v	typeref:typename:const unsigned int
st	config.def.h	/^static const char *st[]  = { "st", NULL };$/;"	v	typeref:typename:const char * []
stairdirection	config.def.h	/^static const int stairdirection     = 1;        \/* 0: left-aligned, 1: right-aligned *\/$/;"	v	typeref:typename:const int
stairpx	config.def.h	/^static const unsigned int stairpx   = 20;       \/* depth of the stairs layout *\/$/;"	v	typeref:typename:const unsigned int
stairsamesize	config.def.h	/^static const int stairsamesize      = 1;        \/* 1 means shrink all the staired windows to th/;"	v	typeref:typename:const int
swallowfloating	config.def.h	/^static const int swallowfloating    = 0;        \/* 1 means swallow floating windows by default /;"	v	typeref:typename:const int
tags	config.def.h	/^static const char *tags[] = { "", "", " ", "ﭮ ", "", "", "", "爵 "/;"	v	typeref:typename:const char * []
thunderbird	config.def.h	/^static const char *thunderbird[]  = { "thunderbird", NULL };$/;"	v	typeref:typename:const char * []
topbar	config.def.h	/^static const int topbar             = 1;        \/* 0 means bottom bar *\/$/;"	v	typeref:typename:const int
ulineall	config.def.h	/^static const int ulineall 		= 0;	\/* 1 to show underline on all tags, 0 for just the active ones/;"	v	typeref:typename:const int
ulinepad	config.def.h	/^static const unsigned int ulinepad	= 5;	\/* horizontal padding between the underline and tag *\/$/;"	v	typeref:typename:const unsigned int
ulinestroke	config.def.h	/^static const unsigned int ulinestroke	= 2;	\/* thickness \/ height of the underline *\/$/;"	v	typeref:typename:const unsigned int
ulinevoffset	config.def.h	/^static const unsigned int ulinevoffset	= 0;	\/* how far above the bottom of the bar the line sho/;"	v	typeref:typename:const unsigned int
user_bh	config.def.h	/^static const int user_bh            = 30;        \/* 0 means that dwm will calculate bar height,/;"	v	typeref:typename:const int
vertpad	config.def.h	/^static const int vertpad            = 10;       \/* vertical padding of bar *\/$/;"	v	typeref:typename:const int
